openapi: 3.1.0
info:
  title: Tableo API
  description: >-
    ## Prepare Your Environment:


    Change the url to the `Sandbox Url` for test


    **Production Url:**


    >
    [https://app.bookia.eu/api/google-server/v3](https://app.bookia.eu/api/google-server/v3)


    **Sandbox Url:**


    >
    [https://devrms.tableo.com/api/google-server/v3](https://devrms.tableo.com/api/google-server/v3)
  version: v0.0.1
  contact:
    name: Contact us
    url: https://tableo.com/contact/
    email: dev@tableo.com
servers:
  - url: https://devrms.tableo.com
    description: Sandbox environment server
  - url: https://app.tableo.com
    description: Production environment server
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
security:
  - basicAuth: []
tags:
  - name: google server
  - name: chatbot
  - name: stripe
  - name: freshworks
  - name: Agora
paths:
  /api/google-server/v3/merchants:
    get:
      tags:
        - google server
      summary: merchants
      description: |-
        This method returns all merchants.

        **Request**

        None

        **Return value**

        None.
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.21.4
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.33
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 10 Jan 2023 18:46:28 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                - category: restaurant
                  merchant_id: ChIJwwPvxwhRDhMRcphZtJwk4HQ
                  name: Testing restaurant
                  url: https://my-restaurant.com/
                  telephone: "+35620000000"
                  geo:
                    latitude: 35.9
                    longitude: 14.41
                    address:
                      locality: Il-Mosta
                      country: MT
                      region: ""
                      street_address: Triq Durumblat Mosta MST, Il-Mosta 4812, Malta
                      postal_code: MST 4812
                  brand_id: Tableo
  /api/google-server/v3/HealthCheck:
    get:
      tags:
        - google server
      summary: HealthCheck
      description: "This method returns your Booking Server health status. It enables Google to continuously monitor the serving state of your Booking server.\n\n**Request**\n\nNone\n\n**Return value**\n\nNone.\n\nUse HTTP status code to indicate the serving status of your server. Return an HTTP status code 200 (OK) if the server is up and running successfully, or to indicate an error please return one of\_[HTTP status code](https://developers.google.com/maps-booking/verticals/dining/reference/rest-api-v3/status_codes).\n\nPlease note that returning a non-200 status code may affect your integration status."
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 17:57:31 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                status: serving
  /api/google-server/v3/availabilities/ChIJrXobRBRRDhMRVDIWhzzmi38:
    get:
      tags:
        - google server
      summary: availabilities
      description: |-
        This method returns avaialbility for a specific merchant

        **Request**

        ```
        //params = merchant_id

        ```

        **Return value**

        None.
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.21.4
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.33
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 10 Jan 2023 18:52:13 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                - spots_total: 3
                  spots_open: 3
                  start_sec: 1752048000
                  duration_sec: 1800
                  service_id: reservation
                  confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                  merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                  max_covers: 20
                  max_days: 45
                  resources:
                    party_size: 2
                    room_id: "1"
                    room_name: Main Dining
                - spots_total: 2
                  spots_open: 2
                  start_sec: 1752048000
                  duration_sec: 1800
                  service_id: reservation
                  confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                  merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                  max_covers: 20
                  max_days: 45
                  resources:
                    party_size: 1
                    room_id: "1"
                    room_name: Main Dining
  /api/google-server/v3/services:
    get:
      tags:
        - google server
      summary: services
      description: |-
        This method returns all services.

        **Request**

        None

        **Return value**

        None.
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.21.4
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.33
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 10 Jan 2023 18:47:25 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                - merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                  service_id: reservation
                  localized_service_name:
                    value: Reservation
                  rules:
                    min_advance_booking: 1800
                    min_advance_online_canceling: 0
                    cancellation_policy:
                      refund_condition:
                        - min_duration_before_start_time_sec: 0
                          refund_percent: 100
                  prepayment_type: NOT_SUPPORTED
  /api/google-server/v3/UpdateBooking:
    post:
      tags:
        - google server
      summary: UpdateBooking
      description: >-
        # UpdateBooking method


        The client uses UpdateBooking to modify an existing booking.


        If updating a booking fails due to any business logic error, the error
        should be populated in the `UpdateBookingResponse.booking_failure` field
        and returned with HTTP status 200.


        **Request**


        ``` markdown
          // The booking to be updated
          // The following fields can be set in a booking:
          // - status, to cancel a booking.
          // - one of the following is required:
          //   - start_time AND duration in the slot, to reschedule a booking.
          //   - party_size (for dining reservations).
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

        ```


        A request message contains updated information in the booking field. The
        request will contain a `booking_id` to identify the booking to update.
        It will also include:


        1. Slot details to update (booking modifications)


        Fields which do not require change will not be provided in the request.


        **Return value**


        ``` markdown
          // The updated booking (required)
          Object booking = {};
          // If updating a booking fails, this field should reflect the business logic
          // error (e.g., booking is not cancellable) (required if failure occurs)
          Object booking_failure = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                booking:
                  booking_id: "{{booking_id}}"
                  slot:
                    duration_sec: "7200"
                    resources:
                      party_size: 3
                    start_sec: "1671645600"
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 18:31:49 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                booking:
                  booking_id: Google-V2M-NYB
                  payment_information:
                    prepayment_status: PREPAYMENT_NOT_PROVIDED
                  slot:
                    duration_sec: "7200"
                    resources:
                      party_size: 3
                    start_sec: "1671645600"
                  status: CONFIRMED
                process_duration_in_milliseconds: 20899
  /api/google-server/v3/SetMarketingPreference:
    post:
      tags:
        - google server
      summary: SetMarketingPreferenceRequest
      description: "# SetMarketingPreferenceRequest method"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_information:
                  email: mauroziux@gmail.com
                  family_name: Suarez Vega
                  given_name: Mauricio
                  telephone: +356 9993 9607
                  user_id: "13126198240951105170"
                user_to_receive_marketing: 1
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx
            Date:
              schema:
                type: string
                example: Tue, 21 Feb 2023 20:02:00 GMT
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            X-Powered-By:
              schema:
                type: string
                example: PleskLin
            Cache-Control:
              schema:
                type: string
                example: private, must-revalidate
            pragma:
              schema:
                type: string
                example: no-cache
            expires:
              schema:
                type: number
                example: "-1"
            Vary:
              schema:
                type: string
                example: Authorization
            Content-Encoding:
              schema:
                type: string
                example: br
          content:
            application/json:
              schema:
                type: object
              example:
                user_information:
                  email: mauroziux@gmail.com
                  family_name: Suarez Vega
                  given_name: Mauricio
                  telephone: +356 9993 9607
                  user_id: "13126198240951105170"
                user_to_receive_marketing: 1
                process_duration_in_milliseconds: 37
  /api/google-server/v3/CreateBooking:
    post:
      tags:
        - google server
      summary: CreateBooking
      description: >-
        # CreateBooking method


        The client requests to create a booking. The partner backend makes a
        booking for the requested slot, and returns the slot upon success, or
        business logic error (e.g. if the slot has become unavailable, or if
        payment is invalid, etc.) upon failure.


        Please note that business logic errors should be returned in the
        `CreateBookingResponse.booking_failure` field, rather than via a non-200
        HTTP response code.


        **Request**


        ``` markdown
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

          // Personal information of the user making the appointment (required)
          Object user_information = {};

          // Information about payments. When payment authorizations are handled by
          // Google, if the booking request does not succeed, payment authorizations are
          // automatically canceled. (optional)
          Object payment_information = {};

          //
          String prepayment_status = "PREPAYMENT_NOT_PROVIDED";

          // Idempotency token for CreateBooking requests. (required)
          //
          // This uniquely identifies a booking request. Specifically:
          // - If a booking was already created for a CreateBooking request with this
          // idempotency token, that booking should be returned.
          // - If no booking has been created for a CreateBooking request with this
          // idempotency token, this should be considered to be a request for a new
          // booking, and **no previously-created booking may be returned**.
          //
          // If a partner considers the requested booking to be a duplicate of a
          // previously-created booking, this request should fail with reason
          // BookingFailure.OVERLAPPING_RESERVATION. The partner is responsible for
          // determining whether this duplicates a previous booking, but for example the
          // partner may consider a booking request to be a duplicate if an existing
          // booking has the same party size, time, and email address.
          string idempotency_token = "6";

        ```


        **Return value**


        ```
          // The created booking (required)
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // Personal information of the user making the appointment (required for
          // CreateBooking)
          Object user_information = {};
          // Status of the booking (required for CreateBooking and UpdateBooking:cancel,
          // but not UpdateBooking:modify)
          String status = "CONFIRMED";
          / Information about payment transactions that relate to the booking.
          // (optional)
          Object payment_information = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                idempotency_token: "15731994231250081786"
                payment_information:
                  prepayment_status: PREPAYMENT_NOT_PROVIDED
                slot:
                  confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                  duration_sec: "1800"
                  merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                  resources:
                    party_size: 2
                    room_id: "3"
                  service_id: reservation
                  start_sec: "{{nextFridayUnixTime}}"
                user_information:
                  email: null
                  family_name: null
                  given_name: Jonathan
                  telephone: null
                  user_id: null
                source: aiphonebot
                additional_request: "-SPECIAL REQUESTS: I will be bringing a small dog."
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 18:11:19 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                booking:
                  booking_id: Google-5NJ-1P8
                  idempotency_token: "15731994231250081786"
                  payment_information:
                    prepayment_status: PREPAYMENT_NOT_PROVIDED
                  slot:
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    duration_sec: "1800"
                    merchant_id: ChIJixuLkaBLDhMRN0naVikYRhM
                    resources:
                      party_size: 2
                      room_id: "1"
                    service_id: reservation
                    start_sec: "1671645600"
                  status: CONFIRMED
                  user_information:
                    email: mauricio@bookia.eu
                    family_name: Suarez Vega
                    given_name: Mauricio
                    telephone: +356 9993 9607
                    user_id: "13126198240951105170"
                process_duration_in_milliseconds: 650
  /api/google-server/v3/CheckAvailability:
    post:
      tags:
        - google server
      summary: CheckAvailability
      description: >-
        # CheckAvailability method


        When a CheckAvailability is issued, the partner booking server verifies
        that the requested appointment slots are currently valid and available.
        This can be used by Reserve with Google to ensure that only current
        slots are presented to users during the reservation flow.


        **Request**


        ```

        // ID of the merchant.

        string merchant_id = 1;

        // Multiple slot times to be checked for availability. All queried times
        apply

        // to the same merchant_id and service_id.

        Array slot_time = [];

        // ID of the service. (required)

        string service_id = "reservation";

        // Start time of the appointment slot in seconds of UTC time since Unix
        epoch

        // (required)

        int64 start_sec = 1;

        // Duration of the appointment slot in seconds (optional)

        int64 duration_sec = 2;

        // The set of resources that specifies the appointment slot, e.g. by

        // indicating the staff member and room selected by the user, or party
        size

        // for dining slots (optional)

        string room_id = "1";

        // For Dining Reservations only: the number of seats requested in the
        booking.

        // (required)

        int32 party_size = 3;

         ```

        **Return value**


        ```

        // The availabilities for the requested SlotTime entries. There must
        be

        // exactly one slot_time_availability for each SlotTime entry in the

        // [ext.maps.booking.partner.v3.BatchAvailabilityLookupRequest].

        Array slot_time_availability = [];

        // The SlotTime for which availability was checked.

        Array slot_time = [];

        // Whether the requested SlotTime is available

        bool available;

         ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                slot_time:
                  - duration_sec: "1800"
                    resource_ids:
                      party_size: 2
                      room_id: "1"
                    service_id: reservation
                    start_sec: "1748642400"
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.25.1
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.2.8
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 19 Sep 2023 17:23:24 GMT
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                slot_time_availability:
                  - spots_total: 16
                    spots_open: 16
                    start_sec: 1695222000
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "1"
                      room_name: Main Dining
                  - spots_total: 7
                    spots_open: 7
                    start_sec: 1695222000
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "2"
                      room_name: Outdoor
                  - spots_total: 16
                    spots_open: 16
                    start_sec: 1695223800
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "1"
                      room_name: Main Dining
                  - spots_total: 7
                    spots_open: 7
                    start_sec: 1695223800
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "2"
                      room_name: Outdoor
                  - spots_total: 16
                    spots_open: 16
                    start_sec: 1695225600
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "1"
                      room_name: Main Dining
                  - spots_total: 7
                    spots_open: 7
                    start_sec: 1695225600
                    duration_sec: 10800
                    service_id: reservation
                    confirmation_mode: CONFIRMATION_MODE_SYNCHRONOUS
                    merchant_id: ChIJ2-3yAxxQDhMRSjPwa__Ne2I
                    max_covers: 15
                    max_days: 60
                    resources:
                      party_size: 2
                      room_id: "2"
                      room_name: Outdoor
                process_duration_in_milliseconds: 74195696
  /api/google-server/v3/BatchAvailabilityLookup:
    post:
      tags:
        - google server
      summary: BatchAvailabilityLookup testing
      description: >-
        # BatchAvailabilityLookup method


        When a BatchAvailabilityLookup is issued, the partner booking server
        verifies that the requested appointment slots are currently valid and
        available. This can be used by Reserve with Google to ensure that only
        current slots are presented to users during the reservation flow.


        **Request**


        ```

        // ID of the merchant.

        string merchant_id = 1;

        // Multiple slot times to be checked for availability. All queried times
        apply

        // to the same merchant_id and service_id.

        Array slot_time = [];

        // ID of the service. (required)

        string service_id = "reservation";

        // Start time of the appointment slot in seconds of UTC time since Unix
        epoch

        // (required)

        int64 start_sec = 1;

        // Duration of the appointment slot in seconds (optional)

        int64 duration_sec = 2;

        // The set of resources that specifies the appointment slot, e.g. by

        // indicating the staff member and room selected by the user, or party
        size

        // for dining slots (optional)

        Object resource_ids = {};

        // The room ID as provided in the feed or empty if not applicable or no
        room

        // was selected. (required)

        string room_id = "1";

        // For Dining Reservations only: the number of seats requested in the
        booking.

        // (required)

        int32 party_size = 3;


        ```


        **Return value**


        ```

        // The availabilities for the requested SlotTime entries. There must
        be

        // exactly one slot_time_availability for each SlotTime entry in the

        // [ext.maps.booking.partner.v3.BatchAvailabilityLookupRequest].

        Array slot_time_availability = [];

        // The SlotTime for which availability was checked.

        Array slot_time = [];

        // Whether the requested SlotTime is available

        bool available;


        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                merchant_id: ChIJrXobRBRRDhMRVDIWhzzmi38
                slot_time:
                  - duration_sec: "5400"
                    resource_ids:
                      room_id: "196"
                    service_id: reservation
                    start_sec: "1748646000"
                  - duration_sec: "5400"
                    resource_ids:
                      party_size: 2
                      room_id: "298"
                    service_id: reservation
                    start_sec: "1749245400"
                  - duration_sec: "5400"
                    resource_ids:
                      party_size: 2
                      room_id: "3906"
                    service_id: reservation
                    start_sec: "1749245400"
      security:
        - basicAuth: []
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.28
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 12 Apr 2022 08:41:08 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                slot_time_availability:
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1649757600"
                    available: true
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1649750410"
                    available: false
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1647367200"
                    available: false
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1647369000"
                    available: false
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1647370800"
                    available: false
                  - slot_time:
                      duration_sec: "1800"
                      resource_ids:
                        party_size: 3
                        room_id: "1"
                      service_id: reservation
                      start_sec: "1647372600"
                    available: false
  /api/chatbot/manager-message:
    post:
      tags:
        - chatbot
      summary: manager message
      description: >-
        # UpdateBooking method


        The client uses UpdateBooking to modify an existing booking.


        If updating a booking fails due to any business logic error, the error
        should be populated in the `UpdateBookingResponse.booking_failure` field
        and returned with HTTP status 200.


        **Request**


        ``` markdown
          // The booking to be updated
          // The following fields can be set in a booking:
          // - status, to cancel a booking.
          // - one of the following is required:
          //   - start_time AND duration in the slot, to reschedule a booking.
          //   - party_size (for dining reservations).
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

        ```


        A request message contains updated information in the booking field. The
        request will contain a `booking_id` to identify the booking to update.
        It will also include:


        1. Slot details to update (booking modifications)


        Fields which do not require change will not be provided in the request.


        **Return value**


        ``` markdown
          // The updated booking (required)
          Object booking = {};
          // If updating a booking fails, this field should reflect the business logic
          // error (e.g., booking is not cancellable) (required if failure occurs)
          Object booking_failure = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                merchant_id: ChIJRe5DsfxRDhMRDhagFJI5py8
                message: hola
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 18:31:49 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                booking:
                  booking_id: Google-V2M-NYB
                  payment_information:
                    prepayment_status: PREPAYMENT_NOT_PROVIDED
                  slot:
                    duration_sec: "7200"
                    resources:
                      party_size: 3
                    start_sec: "1671645600"
                  status: CONFIRMED
                process_duration_in_milliseconds: 20899
  /api/chatbot/booking/{booking_id}:
    get:
      tags:
        - chatbot
      summary: update booking by reference
      description: >-
        # UpdateBooking method


        The client uses UpdateBooking to modify an existing booking.


        If updating a booking fails due to any business logic error, the error
        should be populated in the `UpdateBookingResponse.booking_failure` field
        and returned with HTTP status 200.


        **Request**


        ``` markdown
          // The booking to be updated
          // The following fields can be set in a booking:
          // - status, to cancel a booking.
          // - one of the following is required:
          //   - start_time AND duration in the slot, to reschedule a booking.
          //   - party_size (for dining reservations).
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

        ```


        A request message contains updated information in the booking field. The
        request will contain a `booking_id` to identify the booking to update.
        It will also include:


        1. Slot details to update (booking modifications)


        Fields which do not require change will not be provided in the request.


        **Return value**


        ``` markdown
          // The updated booking (required)
          Object booking = {};
          // If updating a booking fails, this field should reflect the business logic
          // error (e.g., booking is not cancellable) (required if failure occurs)
          Object booking_failure = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      parameters:
        - name: booking_id
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 18:31:49 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 200 ok
                  value:
                    booking:
                      booking_id: Google-V2M-NYB
                      payment_information:
                        prepayment_status: PREPAYMENT_NOT_PROVIDED
                      slot:
                        duration_sec: "7200"
                        resources:
                          party_size: 3
                        start_sec: "1671645600"
                      status: CONFIRMED
                    process_duration_in_milliseconds: 20899
                example-1:
                  summary: ok
                  value:
                    data:
                      id: 1023612
                      reference: PFM-YJR
                      no_of_adults: 2
                      no_of_children: 0
                      date: "2024-02-14T05:45:00.000000Z"
                      end_time: "2024-02-14T08:15:00.000000Z"
                      duration: 150
                      booking_flexible: 0
                      dining_area_id: 1
                      restaurant_id: 582
                      status: awaiting_event_payment
                      waiting_list: 0
                      comment: null
                      patron_id: 326511
                      edited_by: 2101
                      created_by: 2101
                      created_at: "2024-01-25T09:07:22.000000Z"
                      updated_at: "2024-01-25T09:07:39.000000Z"
                      channel_id: 1
                      private_comment: null
                      is_from_api: 0
                      staff_id: null
                      booking_cancellation_reason_id: null
                      table_histories:
                        - tables:
                            - id: 7516
                              name: T 3
                          date: "2024-01-25T09:07:22.213085Z"
                      concierge_id: null
                      api_3rd_parties: 0
                      company: null
                      deleted_at: null
  /api/chatbot/patron/35699939607/booking:
    get:
      tags:
        - chatbot
      summary: get bookings by patron's phone
      description: >-
        # UpdateBooking method


        The client uses UpdateBooking to modify an existing booking.


        If updating a booking fails due to any business logic error, the error
        should be populated in the `UpdateBookingResponse.booking_failure` field
        and returned with HTTP status 200.


        **Request**


        ``` markdown
          // The booking to be updated
          // The following fields can be set in a booking:
          // - status, to cancel a booking.
          // - one of the following is required:
          //   - start_time AND duration in the slot, to reschedule a booking.
          //   - party_size (for dining reservations).
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

        ```


        A request message contains updated information in the booking field. The
        request will contain a `booking_id` to identify the booking to update.
        It will also include:


        1. Slot details to update (booking modifications)


        Fields which do not require change will not be provided in the request.


        **Return value**


        ``` markdown
          // The updated booking (required)
          Object booking = {};
          // If updating a booking fails, this field should reflect the business logic
          // error (e.g., booking is not cancellable) (required if failure occurs)
          Object booking_failure = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      parameters:
        - name: merchant_id
          in: query
          schema:
            type: string
          example: ChIJrXobRBRRDhMRVDIWhzzmi38
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.25.4
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/8.3.7
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Wed, 22 May 2024 20:02:03 GMT
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: "*"
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  - reference: DMJ-E1B
                    no_of_adults: 2
                    no_of_children: 0
                    date: "2022-12-24T17:00:00.000000Z"
                    end_time: "2022-12-24T19:00:00.000000Z"
                    status: accepted
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: Widget
                  - reference: 3FG-69J
                    no_of_adults: 2
                    no_of_children: 0
                    date: "2022-12-24T18:00:00.000000Z"
                    end_time: "2022-12-24T20:00:00.000000Z"
                    status: accepted
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: Widget
                  - reference: KPG-045
                    no_of_adults: 3
                    no_of_children: 0
                    date: "2022-12-07T20:00:00.000000Z"
                    end_time: "2022-12-07T22:00:00.000000Z"
                    status: cancelled
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: Widget
                  - reference: Google-ZXO-JE3
                    no_of_adults: 2
                    no_of_children: null
                    date: "2023-06-17T09:00:00.000000Z"
                    end_time: "2023-06-17T11:00:00.000000Z"
                    status: accepted
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: Google
                  - reference: Google-8MV-5BI
                    no_of_adults: 2
                    no_of_children: null
                    date: "2024-02-12T19:00:00.000000Z"
                    end_time: "2024-02-12T21:00:00.000000Z"
                    status: accepted
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: Google
                  - reference: aichatbot-VXT-0EM
                    no_of_adults: 3
                    no_of_children: null
                    date: "2024-02-12T19:00:00.000000Z"
                    end_time: "2024-02-12T21:00:00.000000Z"
                    status: cancelled
                    dining_area: Outdoor
                    restaurant: TBL Ben's Bistro
                    channel: aichatbot
                  - reference: aichatbot-Q4M-A0H
                    no_of_adults: 2
                    no_of_children: null
                    date: "2024-05-06T19:00:00.000000Z"
                    end_time: "2024-05-06T21:00:00.000000Z"
                    status: accepted
                    dining_area: Indoor
                    restaurant: TBL Ben's Bistro
                    channel: aichatbot
  /api/chatbot/restaurant/{restaurant_slug}/status:
    get:
      tags:
        - chatbot
      summary: get restaurant status
      description: >-
        # UpdateBooking method


        The client uses UpdateBooking to modify an existing booking.


        If updating a booking fails due to any business logic error, the error
        should be populated in the `UpdateBookingResponse.booking_failure` field
        and returned with HTTP status 200.


        **Request**


        ``` markdown
          // The booking to be updated
          // The following fields can be set in a booking:
          // - status, to cancel a booking.
          // - one of the following is required:
          //   - start_time AND duration in the slot, to reschedule a booking.
          //   - party_size (for dining reservations).
          Object booking = {};
          // ID of this booking, which must be unique across all bookings. (required)
          string booking_id = "1";
          // The inventory slot that is being requested to make this booking.
          // If lease_ref is provided, slot must match the lease; slot is provided for
          // the partner to verify the lease information.
          // If lease_ref is absent, then create the booking for the slot. (required)
          Object slot = {};

        ```


        A request message contains updated information in the booking field. The
        request will contain a `booking_id` to identify the booking to update.
        It will also include:


        1. Slot details to update (booking modifications)


        Fields which do not require change will not be provided in the request.


        **Return value**


        ``` markdown
          // The updated booking (required)
          Object booking = {};
          // If updating a booking fails, this field should reflect the business logic
          // error (e.g., booking is not cancellable) (required if failure occurs)
          Object booking_failure = {};
          // duration in milliseconds from the server
          Int64 process_duration_in_milliseconds = 362

        ```
      parameters:
        - name: restaurant_slug
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: OK
          headers:
            Server:
              schema:
                type: string
                example: nginx/1.19.9
            Content-Type:
              schema:
                type: string
                example: application/json
            Transfer-Encoding:
              schema:
                type: string
                example: chunked
            Connection:
              schema:
                type: string
                example: keep-alive
            Vary:
              schema:
                type: string
                example: Accept-Encoding
            X-Powered-By:
              schema:
                type: string
                example: PHP/7.4.32
            Cache-Control:
              schema:
                type: string
                example: no-cache, private
            Date:
              schema:
                type: string
                example: Tue, 20 Dec 2022 18:31:49 GMT
            Content-Encoding:
              schema:
                type: string
                example: gzip
          content:
            application/json:
              schema:
                type: object
              examples:
                example-0:
                  summary: 200 ok
                  value:
                    booking:
                      booking_id: Google-V2M-NYB
                      payment_information:
                        prepayment_status: PREPAYMENT_NOT_PROVIDED
                      slot:
                        duration_sec: "7200"
                        resources:
                          party_size: 3
                        start_sec: "1671645600"
                      status: CONFIRMED
                    process_duration_in_milliseconds: 20899
                example-1:
                  summary: ok
                  value:
                    data:
                      id: 1023612
                      reference: PFM-YJR
                      no_of_adults: 2
                      no_of_children: 0
                      date: "2024-02-14T05:45:00.000000Z"
                      end_time: "2024-02-14T08:15:00.000000Z"
                      duration: 150
                      booking_flexible: 0
                      dining_area_id: 1
                      restaurant_id: 582
                      status: awaiting_event_payment
                      waiting_list: 0
                      comment: null
                      patron_id: 326511
                      edited_by: 2101
                      created_by: 2101
                      created_at: "2024-01-25T09:07:22.000000Z"
                      updated_at: "2024-01-25T09:07:39.000000Z"
                      channel_id: 1
                      private_comment: null
                      is_from_api: 0
                      staff_id: null
                      booking_cancellation_reason_id: null
                      table_histories:
                        - tables:
                            - id: 7516
                              name: T 3
                          date: "2024-01-25T09:07:22.213085Z"
                      concierge_id: null
                      api_3rd_parties: 0
                      company: null
                      deleted_at: null
  /stripe/webhook:
    post:
      tags:
        - stripe
      summary: webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                id: evt_1P3FYQI9BCKEKwHW0Dwgkzh3
                object: event
                api_version: "2020-08-27"
                created: 1712572557
                data:
                  object:
                    id: in_1P3FYNI9BCKEKwHWvSr0s7oS
                    object: invoice
                    account_country: MT
                    account_name: Bookia / Tableo
                    account_tax_ids: null
                    amount_due: 26373
                    amount_paid: 0
                    amount_remaining: 26373
                    amount_shipping: 0
                    application: null
                    application_fee_amount: null
                    attempt_count: 1
                    attempted: true
                    auto_advance: false
                    automatic_tax:
                      enabled: false
                      liability: null
                      status: null
                    billing_reason: manual
                    charge: ch_3P3FYOI9BCKEKwHW07boqNYF
                    collection_method: charge_automatically
                    created: 1712572555
                    currency: eur
                    custom_fields: null
                    customer: cus_Nz1aiOQyc1NfAT
                    customer_address: null
                    customer_email: info@salumeriamalta.com
                    customer_name: Salumeria Gardens
                    customer_phone: null
                    customer_shipping: null
                    customer_tax_exempt: none
                    customer_tax_ids: []
                    default_payment_method: src_1NQXdPI9BCKEKwHW0SKozYE2
                    default_source: null
                    default_tax_rates: []
                    description: null
                    discount: null
                    discounts: []
                    due_date: null
                    effective_at: 1712572555
                    ending_balance: 0
                    footer: null
                    from_invoice: null
                    hosted_invoice_url: >-
                      https://invoice.stripe.com/i/acct_1K99iEI9BCKEKwHW/live_YWNjdF8xSzk5aUVJOUJDS0VLd0hXLF9QdDFiWVRsUUxQajAyQk1Pc3VwZTJyRjc2OVk4bm1nLDEwMzExMzM1OA0200AxnVUSrI?s=ap
                    invoice_pdf: >-
                      https://pay.stripe.com/invoice/acct_1K99iEI9BCKEKwHW/live_YWNjdF8xSzk5aUVJOUJDS0VLd0hXLF9QdDFiWVRsUUxQajAyQk1Pc3VwZTJyRjc2OVk4bm1nLDEwMzExMzM1OA0200AxnVUSrI/pdf?s=ap
                    issuer:
                      type: self
                    last_finalization_error: null
                    latest_revision: null
                    lines:
                      object: list
                      data:
                        - id: il_1P3FYMI9BCKEKwHWNLsfBWnb
                          object: line_item
                          amount: 26373
                          amount_excluding_tax: 26373
                          currency: eur
                          description: "outstanding bills: Salumeria Gardens"
                          discount_amounts: []
                          discountable: true
                          discounts: []
                          invoice: in_1P3FYNI9BCKEKwHWvSr0s7oS
                          invoice_item: ii_1P3FYMI9BCKEKwHW4NkJxfRH
                          livemode: true
                          metadata: {}
                          period:
                            end: 1712572554
                            start: 1712572554
                          plan: null
                          price:
                            id: price_1P3FYMI9BCKEKwHWVtD6JTmc
                            object: price
                            active: false
                            billing_scheme: per_unit
                            created: 1712572554
                            currency: eur
                            custom_unit_amount: null
                            livemode: true
                            lookup_key: null
                            metadata: {}
                            nickname: null
                            product: prod_Pt1bB0wWAa5ju2
                            recurring: null
                            tax_behavior: unspecified
                            tiers_mode: null
                            transform_quantity: null
                            type: one_time
                            unit_amount: 26373
                            unit_amount_decimal: "26373"
                          proration: false
                          proration_details:
                            credited_items: null
                          quantity: 1
                          subscription: null
                          tax_amounts: []
                          tax_rates: []
                          type: invoiceitem
                          unit_amount_excluding_tax: "26373"
                      has_more: false
                      total_count: 1
                      url: /v1/invoices/in_1P3FYNI9BCKEKwHWvSr0s7oS/lines
                    livemode: true
                    metadata:
                      user: kiju-kijuc@hotmail.com
                    next_payment_attempt: null
                    number: 4CC14B5C-2065
                    on_behalf_of: null
                    paid: false
                    paid_out_of_band: false
                    payment_intent: pi_3P3FYOI9BCKEKwHW0vt7wMPY
                    payment_settings:
                      default_mandate: null
                      payment_method_options: null
                      payment_method_types: null
                    period_end: 1712572555
                    period_start: 1712572555
                    post_payment_credit_notes_amount: 0
                    pre_payment_credit_notes_amount: 0
                    quote: null
                    receipt_number: null
                    rendering:
                      amount_tax_display: exclude_tax
                      pdf:
                        page_size: letter
                    rendering_options:
                      amount_tax_display: exclude_tax
                    shipping_cost: null
                    shipping_details: null
                    starting_balance: 0
                    statement_descriptor: null
                    status: open
                    status_transitions:
                      finalized_at: 1712572555
                      marked_uncollectible_at: null
                      paid_at: null
                      voided_at: null
                    subscription: null
                    subscription_details:
                      metadata: null
                    subtotal: 26373
                    subtotal_excluding_tax: 26373
                    tax: null
                    test_clock: null
                    total: 26373
                    total_discount_amounts: []
                    total_excluding_tax: 26373
                    total_tax_amounts: []
                    transfer_data: null
                    webhooks_delivered_at: 1712572555
                livemode: true
                pending_webhooks: 1
                request:
                  id: req_xVbXpgDE3xAsXJ
                  idempotency_key: 92b60adc-cd49-4003-9f57-4029a4a58c7e
                type: invoice.payment_failed
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/freshworks/webhook:
    post:
      tags:
        - freshworks
      summary: Webhook
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sales_account_id: 202001517773
                sales_account_owner_email: mauricio@bookia.eu
                sales_account_owner_name: freshsales
                sales_account_owner_id: 123456
                sales_account_parent_sales_account_id: 123456
                sales_account_cf_tableo_uid: freshsales
                sales_account_cf_tableo_account: freshsales
                sales_account_cf_connected_to_tableo: freshsales
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/freshworks/webhook/slack:
    post:
      tags:
        - freshworks
      summary: Webhook Slack
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                phone_call_id: 202000945524
                phone_call_owner_name: Dev Team
                phone_call_call_status: Completed
                phone_call_created_at: 01-07-2025 18:47:50
                phone_call_outcome_id: 202001529630
                phone_call_entity_first_name: Agriturismo
                phone_call_entity_last_name: Puntalizzu
                phone_call_entity_owner_name: Monica Dang Minh
                phone_call_entity_sales_account_cf_tableo_uid: "5825"
                phone_call_entity_country: Italy
                phone_call_entity_cf_country_code: IT
                phone_call_entity_recent_note: mauricio test
                phone_call_entity_sales_account_recent_note: null
                phone_call_entity_id: 202032002917
                phone_call_entity_sales_account_id: 202004368087
                phone_call_entity_sales_account_name: Puntalizzu
                phone_call_call_direction: Outgoing
                phone_call_is_manual: "Yes"
                phone_call_entity_sales_account_cf_google_restaurant_name: >-
                  Agriturismo Puntalizzu, Appartamenti - Wines Food Homemade
                  products, Hiking, MTB excursions, Outdoor activities
                type: Contact
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/turnos:
    get:
      tags:
        - Agora
      summary: Turnos
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas:
    get:
      tags:
        - Agora
      summary: Reservas
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas_en_mesa:
    get:
      tags:
        - Agora
      summary: Reservas en mesa
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas/modificar_mesas_reserva:
    patch:
      tags:
        - Agora
      summary: Modificar mesas reserva
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reserva_id: 2043472
                a_ids_mesas:
                  - 235
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas/sentar_reserva:
    patch:
      tags:
        - Agora
      summary: Sentar reserva
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                reserva_id: 2043472
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas/liberar_reserva:
    patch:
      tags:
        - Agora
      summary: Liberar reserva
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                ticket_json:
                  id_reserv: "2043493"
                  items:
                    - productName: Pizza Barbacoa
                      amount: 1,00
                      unitPrice: 5,75
                      totalPrice: 5,75
                  pyaments:
                    - type: Efectivo
                      amount: 6,33
                  printDate: "2025-03-14 20:21:28"
                  total: 6,33
                reserva_id: 2043493
                importe_total: 6.33
                num_personas: 2
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/reservas/crear_reserva_de_paso:
    post:
      tags:
        - Agora
      summary: Crear reserva de paso
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                nombre: De Paso
                num_pax: 7
                a_ids_mesas:
                  - 235
                b_comprobar_mesas: true
                b_comprobar_mesas_ocupadas: false
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/v1/mesas:
    get:
      tags:
        - Agora
      summary: Mesas
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /widget/ben-prelaunch-rest/:
    get:
      tags:
        - default
      summary: widget
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /api/test:
    get:
      tags:
        - default
      summary: trace test
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /widget/ben-prelaunch-rest/google-payment-redirect:
    get:
      tags:
        - default
      summary: widget from google
      parameters:
        - name: date
          in: query
          schema:
            type: string
          example: "{{nextFridayUnixTime}}"
        - name: no_of_adults
          in: query
          schema:
            type: integer
          example: "2"
        - name: dining
          in: query
          schema:
            type: string
          example: Indoor
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /widget/ben-prelaunch-rest/service-times:
    get:
      tags:
        - default
      summary: widget service times
      parameters:
        - name: day
          in: query
          schema:
            type: string
          example: "2024-07-01"
        - name: booking_date
          in: query
          schema:
            type: string
          example: "2024-07-01"
        - name: no_of_adults
          in: query
          schema:
            type: integer
          example: "2"
        - name: no_of_children
          in: query
          schema:
            type: integer
          example: "0"
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
